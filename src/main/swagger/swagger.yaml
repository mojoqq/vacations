---
swagger: '2.0'
info:
  description: REST-API для работы с корпоративным порталом по заказу продукции.
  version: 1.0.0
  title: Mock Market
  contact:
    email: bvorobev@it-platforma.ru
schemes:
  - http
host: localhost:8080

basePath: "/rest/api"
tags:
  - name: Employee
    description: Работа с клиентами
  - name: OrderApi
    description: Работа с заказами

paths:

  /customers:
    get:
      tags:
        - Employee
      summary: Список всех сотрудников
      operationId: getAllEmployees
      produces:
        - application/json
      parameters:
        - in: query
          type: integer
          format: int32
          name: pageNum
          description: Номер страницы
          required: true
        - in: query
          type: integer
          format: int32
          name: pageSize
          description: Номер страницы
          required: true
        - in: query
          type: integer
          format: int64
          name: excludeId
          required: false
          description: ID для исключения в списке
      responses:
        '200':
          schema:
            $ref:  "#/definitions/PageEmployeeDto"
          description: Успешно
        '500':
          description: Ошибка на стороне сервера или неправильно введены данные

  /getEmployeeVacations:
    get:
      tags:
        - Employee
      summary: Получить информацию об отпусках сотрудника
      operationId: getEmployeeVacations
      produces:
        - application/json
      parameters:
        - in: query
          type: integer
          format: int64
          required: true
          name: id
      responses:
        '200':
          schema:
            $ref:  "#/definitions/EmployeeDto"
          description: Успешно

  /deleteEmployeeById:
    get:
      tags:
        - Employee
      summary: Удалить сотрудника по id
      operationId: deleteEmployeeById
      produces:
        - application/json
      parameters:
        - in: query
          name: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK

  /updateVacationsByEmployeeId:
    post:
      tags:
        - Employee
      summary: Обновляет отпуск для сотрудника
      operationId: updateVacationsByEmployeeId
      produces:
        - application/json
      parameters:
        - in: body
          schema:
            $ref: "#/definitions/EmployeeDto"
          required: true
          name: dto
      responses:
        '200':
          description: Успешно

  /deleteVacationById:
    post:
      tags:
        - Employee
      summary: Удалить отпуск по id
      operationId: deleteVacationById
      produces:
        - application/json
      parameters:
        - in: query
          name: vacationId
          type: integer
          format: int64
          required: true
      responses:
        '200':
          description: Успешно



definitions:

  PageEmployeeDto:
    type: object
    properties:
      content:
        type: array
        items:
          "$ref": "#/definitions/EmployeeDto"
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        "$ref": "#/definitions/Pageable"
      size:
        type: integer
        format: int32
      sort:
        "$ref": "#/definitions/Sort"
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: Page«PageEmployeeDto»

  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        "$ref": "#/definitions/Sort"
      unpaged:
        type: boolean
    title: Pageable

  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort


  EmployeeDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      firstname:
        type: string
      lastname:
        type: string
      middlename:
        type: string
      vacations:
        type: array
        items:
          $ref: "#/definitions/VacationDto"

  VacationDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      start:
        type: string
        format: date
      end:
        type: string
        format: date



